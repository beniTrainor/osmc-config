" ~/.vimrc
"
" GENERAL {{{
" -------
" Set 'nocompatible' to ward off unexpected things that your distro might
" have made, as well as sanely reset options when re-sourcing .vimrc
set nocompatible

" Prevent words from breaking when wrapping
set linebreak

" Attempt to determine the type of a file based on its name and possibly 
" its contents. Use this to allow intelligent auto-indenting for each 
" filetype, and for plugins that are filetype specific.
filetype indent plugin on

" Sets the filetype for files with the markdown extension
autocmd BufRead,BufNewFile {*.markdown,*.md} set filetype=markdown

" Prevent a line from wrapping as you type
set formatoptions-=t
" Join comment symbols when joining multiple lines
set formatoptions+=j 

" Indent new lines
set autoindent

" Display matching [], {} and ()
set showmatch

" Redraw the screen only when is necessary.
set lazyredraw

" Set the leader key. This key can be used create mappings.
let mapleader = ","

" Remap copy/paste from the system register (+)
" WARNING: the system register needs to be installed
" to do this easily install `gvim`
vnoremap <C-c> "+y
map <C-p> "+p

" Disable automatic creation of swap files
set noswapfile

" Disable annoying keybinding
map <S-k> <Nop>

" Highlight last inserted text
nnoremap gV `[v`]

" }}}
" NAVIGATION {{{
" ----------
" Move cursor to the middle of the current line
map gm :call cursor(0, virtcol('$')/2)<CR>

" Move cursor in a line that extends over multiple rows
nnoremap j gj
nnoremap k gk

" }}}
" SEARCH {{{
" ------
" Show partial matches
set incsearch

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Toggle search highlighting
nnoremap <leader><space> :set hlsearch!<CR>

" }}}
" TABS AND SPACES {{{
" ---------------
" Set the number of spaces in tab in insert mode 
set tabstop=2

" Set the number of spaces in normal mode
set shiftwidth=2

" Set the number of spaces in tab when editing
set softtabstop=4

" Allow the conversion of tabs into spaces
set expandtab

" Enable better command-line completion
set wildmenu

" }}}
" GRAPHICAL ELEMENTS {{{
" ------------------
" Display line numbers
set number

" Display a horizontal line where the cursor is located
set cursorline

" }}}
" COLORS {{{
" ------
highlight CursorLine term=bold cterm=bold ctermbg=darkgrey

" }}}
" AUTOMATIC CHARACTER INSERTION {{{

inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap " ""<left>

" Automatically insert closing braces on the next line
inoremap {<CR> {<CR>}<ESC>O

" Print out the current date
iab nowdate <c-r>=strftime('%Y-%m-%d')<cr>

" }}}
" PROGRAMMING {{{

syntax off " Try using vim without syntax, since in some cases it creates
           " confusion and in other cases the syntax constructs are not
           " supported in some languages

let python_highlight_all = 1

au Filetype python setlocal colorcolumn=81 textwidth=79 tabstop=4 shiftwidth=4 softtabstop=4

" Change to how many spaces are generated by a tab
autocmd Filetype html setlocal softtabstop=2
autocmd Filetype css setlocal softtabstop=2
autocmd Filetype pug setlocal softtabstop=2
autocmd FileType bash setlocal softtabstop=2
autocmd FileType sh setlocal softtabstop=2
autocmd FileType bats setlocal softtabstop=2

"
" }}}
" AUTOCORRECTED TYPOS {{{
" ===================
" They must have potential for long-term usage. Otherwise, premature
" optimizations might waste a lot of time and not benefit very much in the
" long run.
"
iabbr aka a.k.a.,
iabbr ie i.e.,
iabbr eg e.g.,

iabbr english English
iabbr spanish Spanish

" }}}
